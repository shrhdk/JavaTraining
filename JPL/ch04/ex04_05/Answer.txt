(a) N分木のノードを表すTreeNode

	具象クラス
	
	具体的なデータを表現するので、具象クラスとして定義する。
	抽象クラスとして定義して、1分木のノード、2分木のノード、…
	という具合に継承するのは現実的ではない。


(b) 特定の順番(深さ優先、幅優先など)で木を探索するTreeWalker

	具象クラス

	具体的な処理を必要とするクラスなので、具象クラスとして定義する。


(c) グラフィックシステムにより描画可能なオブジェクトのためのDrawable

	A. インタフェース

	名前からしてインタフェースである。

	描画可能にするためにDrawableを継承しなければならないのは
	他の有用なクラスを継承する妨げになる。


(d) グラフィックデスクトップから実行できるプログラムのためのApplication

	A. 抽象クラス

	Applicationはプログラムのひな形であると仮定する。
	ひな形を実行することはできないため、ひな形をインスタンス化することはできない。
	つまり、Applicationは具象クラスではない。

	インタフェースか抽象クラスかという話になるが、
	アプリケーションの実行には決まった処理があることが一般的なので、
	その処理の実装を提供するには抽象クラスである必要がある。

	また、プログラムとなるクラスがApplication以外のものを継承することは
	考えにくいため、Applicationをインタフェースにする必要はなく、
	抽象クラスとして定義するのが合理的であると考えられる。
